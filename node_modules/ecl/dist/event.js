var Event,
  extend = require("extends__"),
  hasProp = {}.hasOwnProperty;

module.exports = Event = (function(superClass) {
  extend(Event, superClass);

  function Event(type, callback) {
    var args, date, perf;
    args = (typeof type === 'string' ? {
      type: type
    } : type || {});
    if (typeof callback === 'function') {
      args.callback = callback;
    }
    Event.__super__.constructor.call(this, args);
    if (this.timestamp === true) {
      date = Date.now();
      perf = (typeof performance !== "undefined" && performance !== null ? performance.now() : void 0) || 0;
      this.timestamp = 1000 * date + Math.floor(1000 * (perf - Math.floor(perf)));
    }
  }

  Event.prototype.cancel = function() {
    this.___runtime.cancel = true;
    return this;
  };

  Event.prototype.stop = function() {
    this.___runtime.stop = true;
    return this;
  };

  Event.prototype.abort = function() {
    this.aborted = true;
    return this;
  };

  return Event;

})(require('./base'));
